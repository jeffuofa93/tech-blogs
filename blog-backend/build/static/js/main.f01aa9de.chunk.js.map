{"version":3,"sources":["theme.js","ColorModeSwitcher.js","services/blogService.js","components/AlertButton.js","components/ToggleBlog.js","components/Blogs.js","services/loginService.js","components/Notification.js","components/LoginForm.js","components/Logout.js","components/AddBlog.js","components/Toggleable.js","App.js","index.js"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","baseUrl","token","getAll","a","axios","get","response","data","setToken","newToken","create","newObject","headers","Authorization","post","update","id","put","remove","delete","AlertButton","handleDeleteClick","blog","useState","isOpen","setIsOpen","onClose","cancelRef","useRef","colorScheme","leastDestructiveRef","fontWeight","title","ref","handleClick","ml","BlogLine","label","content","ToggleButton","toggleVisibility","px","alignSelf","ToggleBlog","visible","setVisible","hideWhenVisible","display","showWhenVisible","style","justifySelf","alignItems","author","likes","increaseLikes","user","name","href","url","isExternal","ExternalLink","mx","Blogs","blogs","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","map","login","credentials","Notification","message","toString","m","LoginForm","username","setUsername","password","setPassword","handleLogin","event","preventDefault","console","log","attemptLogin","onSubmit","spacing","children","type","value","onChange","target","Logout","handleLogout","AddBlog","createBlog","newBlog","setNewBlog","handleBlogChange","addBlog","Togglable","React","forwardRef","buttonLabel","useImperativeHandle","align","displayName","App","setBlogs","errorMessage","setErrorMessage","setUser","setColor","blogFormRef","localStorageKey","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","handleErrorMessageChange","newMessage","setTimeout","find","updatedBlog","returnedBlog","blogObject","current","updatedBlogs","deleteBlog","filter","sortedBlogs","sort","firstBlog","secondBlog","height","mr","isRound","mb","bgGradient","bgClip","removeItem","Toggleable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f01aa9de.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n// 2. Add your color mode config\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n// 3. extend the theme\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport { IconButton, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\nexport const ColorModeSwitcher = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  await axios.delete(`${baseUrl}/${id}`, config);\n  return true;\n};\n\nexport default { getAll, setToken, create, update, remove };\n","import React, { useRef, useState } from \"react\";\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n} from \"@chakra-ui/react\";\n\nconst AlertButton = ({ handleDeleteClick, blog }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const onClose = () => setIsOpen(false);\n  const cancelRef = useRef();\n\n  const handleClick = (handleDeleteClick, blog) => {\n    handleDeleteClick(blog);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Button colorScheme=\"red\" onClick={() => setIsOpen(true)}>\n        Delete Blog\n      </Button>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Delete Blog\n            </AlertDialogHeader>\n\n            <AlertDialogBody>Delete {blog.title}?</AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button\n                colorScheme=\"red\"\n                onClick={() => handleClick(handleDeleteClick, blog)}\n                ml={3}\n              >\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default AlertButton;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  HStack,\n  IconButton,\n  Link,\n  Spacer,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { FaArrowUp } from \"react-icons/all\";\nimport AlertButton from \"./AlertButton\";\n\nconst ToggleBlog = (props) => {\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  // console.log(props.user);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <HStack justifySelf={\"left\"} alignItems={\"left\"}>\n          <Text>{props.blog.title}</Text>\n          <Spacer />\n          <ToggleButton label={\"View\"} toggleVisibility={toggleVisibility} />\n        </HStack>\n      </div>\n      <div style={showWhenVisible}>\n        <VStack alignItems={\"left\"}>\n          <HStack>\n            <BlogLine label={\"Title\"} content={props.blog.title} />\n            <Spacer />\n            <ToggleButton label={\"Hide\"} toggleVisibility={toggleVisibility} />\n          </HStack>\n          <BlogLine label={\"Author\"} content={props.blog.author} />\n          <HStack>\n            <Box>\n              <Text>\n                <b>Likes: </b>\n                {props.blog.likes}\n              </Text>\n            </Box>\n            <IconButton\n              aria-label=\"temp\"\n              icon={<FaArrowUp />}\n              onClick={() => props.increaseLikes(props.blog.id)}\n            />\n          </HStack>\n          <BlogLine label={\"User\"} content={props.blog.user.name} />\n          <Box>\n            <Text>\n              <b>URL: </b>\n              <Link href={props.blog.url} isExternal>\n                <ExternalLinkIcon mx={\"2px\"} />\n              </Link>\n            </Text>\n          </Box>\n          <Box>\n            <AlertButton\n              blog={props.blog}\n              handleDeleteClick={props.handleDeleteClick}\n            />\n          </Box>\n        </VStack>\n      </div>\n    </div>\n  );\n};\n\nconst BlogLine = ({ label, content }) => {\n  return (\n    <Box>\n      <Text>\n        <b>{label}: </b>\n        {content}\n      </Text>\n    </Box>\n  );\n};\n\nconst ToggleButton = ({ label, toggleVisibility }) => {\n  return (\n    <>\n      <Button\n        colorScheme={\"pink\"}\n        px={8}\n        alignSelf={\"left\"}\n        onClick={toggleVisibility}\n      >\n        {label}\n      </Button>\n    </>\n  );\n};\n\nexport default ToggleBlog;\n","import { StackDivider, VStack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ToggleBlog from \"./ToggleBlog\";\n\nconst Blogs = ({ blogs, increaseLikes, handleDeleteClick }) => {\n  return (\n    <VStack\n      divider={<StackDivider />}\n      borderColor=\"gray.100\"\n      borderWidth=\"2px\"\n      p=\"4\"\n      borderRadius=\"lg\"\n      w=\"100%\"\n      maxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n      alignItems=\"strech\"\n      justifySelf={\"center\"}\n    >\n      {blogs.map((blog) => (\n        <ToggleBlog\n          key={blog.id}\n          blog={blog}\n          increaseLikes={increaseLikes}\n          handleDeleteClick={handleDeleteClick}\n        >\n          {\"\"}\n        </ToggleBlog>\n      ))}\n    </VStack>\n  );\n};\n\nexport default Blogs;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\n\nconst Notification = ({ message, color }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <Badge colorScheme={color.toString()} p=\"4\" m=\"4\" borderRadius=\"lg\">\n      {message}\n    </Badge>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  VStack,\n} from \"@chakra-ui/react\";\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    console.log(\"logging in with\", username);\n    const user = await props.attemptLogin({ username, password });\n    if (user) {\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  };\n  return (\n    <form onSubmit={handleLogin}>\n      <VStack spacing={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"username:\" />\n          <Input\n            type=\"text\"\n            value={username}\n            name={\"Username\"}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"password:\" />\n          <Input\n            type=\"password\"\n            value={password}\n            name={\"Password\"}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </InputGroup>\n        <Button type=\"submit\" colorScheme={\"pink\"} px={8}>\n          login\n        </Button>\n      </VStack>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Button, HStack, Text } from \"@chakra-ui/react\";\n\nconst Logout = ({ user, handleLogout }) => {\n  return (\n    <HStack>\n      <Text>{user.name} logged-in</Text>\n      <Button colorScheme={\"pink\"} px={8} onClick={handleLogout}>\n        logout\n      </Button>\n    </HStack>\n  );\n};\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  VStack,\n} from \"@chakra-ui/react\";\n\nconst AddBlog = ({ createBlog }) => {\n  const [newBlog, setNewBlog] = useState({\n    title: \"\",\n    author: \"\",\n    url: \"\",\n  });\n\n  const handleBlogChange = (event) => {\n    const value = event.target.value;\n    setNewBlog({ ...newBlog, [event.target.name]: value });\n  };\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    createBlog({\n      title: newBlog.title,\n      author: newBlog.author,\n      url: newBlog.url,\n    });\n\n    setNewBlog({ title: \"\", author: \"\", url: \"\" });\n  };\n\n  return (\n    <form onSubmit={addBlog}>\n      <VStack p={8} spacing={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"title:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.title}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"title\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"author:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.author}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"author\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"url:\" />\n          <Input\n            type=\"text\"\n            value={newBlog.url}\n            variant={\"filled\"}\n            onChange={handleBlogChange}\n            name=\"url\"\n          />\n        </InputGroup>\n        <Button type=\"submit\" colorScheme={\"pink\"} px={8} alignSelf={\"left\"}>\n          add blog\n        </Button>\n      </VStack>\n    </form>\n  );\n};\n\nexport default AddBlog;\n","import React, { useImperativeHandle } from \"react\";\nimport { Button, VStack } from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef(\n  ({ buttonLabel, children, setVisible, visible }, ref) => {\n    // const [visible, setVisible] = useState(false);\n\n    Togglable.propTypes = {\n      buttonLabel: PropTypes.string.isRequired,\n    };\n\n    const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n    const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n    const toggleVisibility = () => {\n      setVisible(!visible);\n    };\n\n    useImperativeHandle(ref, () => {\n      return { toggleVisibility };\n    });\n\n    return (\n      <VStack>\n        <div style={hideWhenVisible}>\n          <Button onClick={toggleVisibility}>{buttonLabel}</Button>\n        </div>\n        <div style={showWhenVisible} align={\"center\"}>\n          {children}\n          <Button\n            onClick={toggleVisibility}\n            colorScheme={\"pink\"}\n            px={8}\n            alignSelf={\"left\"}\n          >\n            cancel\n          </Button>\n        </div>\n      </VStack>\n    );\n  }\n);\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","import { Heading, VStack } from \"@chakra-ui/react\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport blogService from \"./services/blogService\";\nimport Blogs from \"./components/Blogs\";\nimport loginService from \"./services/loginService\";\nimport Notification from \"./components/Notification\";\nimport LoginForm from \"./components/LoginForm\";\nimport Logout from \"./components/Logout\";\nimport AddBlog from \"./components/AddBlog\";\nimport Toggleable from \"./components/Toggleable\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [user, setUser] = useState(\"\");\n  const [color, setColor] = useState(\"red\");\n  const [visible, setVisible] = useState(false);\n  const blogFormRef = useRef();\n  const localStorageKey = \"loggedBlogappUser\";\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(localStorageKey);\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const attemptLogin = async ({ username, password }) => {\n    try {\n      const user = await loginService.login({ username, password });\n      window.localStorage.setItem(localStorageKey, JSON.stringify(user));\n      setUser(user);\n      blogService.setToken(user.token);\n    } catch (exception) {\n      handleErrorMessageChange(\"Wrong Credentials\", \"red\");\n    }\n  };\n\n  const handleErrorMessageChange = (newMessage, color) => {\n    setErrorMessage(newMessage);\n    setColor(color);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  const increaseLikes = async (id) => {\n    const blog = blogs.find((blog) => blog.id === id);\n    const updatedBlog = { ...blog, likes: blog.likes + 1 };\n    try {\n      const returnedBlog = await blogService.update(id, updatedBlog);\n      setBlogs(blogs.map((blog) => (blog.id !== id ? blog : returnedBlog)));\n    } catch (exception) {\n      handleErrorMessageChange(\"Error updating blog\", \"red\");\n    }\n  };\n\n  const createBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility();\n    try {\n      const returnedBlog = await blogService.create(blogObject);\n      const updatedBlogs = await blogService.getAll();\n      setBlogs(updatedBlogs);\n      handleErrorMessageChange(\n        `New Blog! ${returnedBlog.title} by ${returnedBlog.author} added`,\n        \"green\"\n      );\n    } catch (exception) {\n      handleErrorMessageChange(\"Cannot post blog\", \"red\");\n    }\n  };\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(localStorageKey);\n    setUser(\"\");\n  };\n\n  const handleDeleteClick = async (deleteBlog) => {\n    // if (!window.confirm(`Delete ${deleteBlog.name}?`)) return;\n    try {\n      await blogService.remove(deleteBlog.id);\n      setBlogs(blogs.filter((blog) => blog.id !== deleteBlog.id));\n    } catch (exception) {\n      handleErrorMessageChange(\"Error deleting blog\", \"red\");\n    }\n  };\n\n  const sortedBlogs = blogs.sort((firstBlog, secondBlog) => {\n    return secondBlog.likes - firstBlog.likes;\n  });\n\n  if (user === \"\") {\n    return (\n      <VStack spacing={4} p={8} height=\"100vh\">\n        <ColorModeSwitcher alignSelf=\"flex-end\" mr={\"8\"} isRound={\"true\"} />\n        <Heading\n          mb=\"4\"\n          fontWeight=\"extrabold\"\n          size=\"2xl\"\n          bgGradient=\"linear(to-r,pink.500,pink.300,blue.500)\"\n          bgClip=\"text\"\n        >\n          Blogs\n        </Heading>\n        <Notification message={errorMessage} color={color} />\n        <LoginForm attemptLogin={attemptLogin} />\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack spacing={4} p={8} height=\"100vh\">\n      <ColorModeSwitcher alignSelf=\"flex-end\" mr={\"8\"} isRound={\"true\"} />\n      <Heading\n        mb=\"4\"\n        fontWeight=\"extrabold\"\n        size=\"2xl\"\n        bgGradient=\"linear(to-r,pink.500,pink.300,blue.500)\"\n        bgClip=\"text\"\n      >\n        Blogs\n      </Heading>\n      <Notification message={errorMessage} color={color} />\n      <Logout user={user} handleLogout={handleLogout} />\n      <Toggleable\n        buttonLabel={\"create blog\"}\n        visible={visible}\n        setVisible={setVisible}\n        ref={blogFormRef}\n      >\n        <AddBlog createBlog={createBlog} />\n      </Toggleable>\n      {visible ? (\n        \"\"\n      ) : (\n        <Blogs\n          blogs={sortedBlogs}\n          increaseLikes={increaseLikes}\n          handleDeleteClick={handleDeleteClick}\n        />\n      )}\n    </VStack>\n  );\n};\n\nexport default App;\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}